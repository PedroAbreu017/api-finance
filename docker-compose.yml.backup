# Docker Compose - Ambiente Completo
version: '3.8'

services:
  # Redis - Cache e sesses
  redis:
    image: redis:7-alpine
    container_name: azure-sql-demo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  # SQL Server - Banco de dados
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: azure-sql-demo-sqlserver
    restart: unless-stopped
    environment:
      SA_PASSWORD: "SqlServer2024!Enterprise#5785"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P SqlServer2024!Enterprise#5785 -C -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  # Aplicação Spring Boot
  app:
    build: .
    container_name: azure-sql-demo-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Banco de dados
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sqlserver:1433;databaseName=AzureSqlDemo;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: "SqlServer2024!Enterprise#5785"
      
      # Redis
      SPRING_REDIS_HOST: "redis"
      SPRING_REDIS_PORT: "6379"
      
      # JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
      SPRING_JPA_SHOW_SQL: "false"
      
      # Profile
      SPRING_PROFILES_ACTIVE: "docker"
      
      # JWT
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      redis:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  redis_data:
    driver: local
  sqlserver_data:
    driver: local

networks:
  app-network:
    driver: bridge
