// AccountMapper.java - CORRIGIDO
package com.example.azure_sql_demo.mapper;

import com.example.azure_sql_demo.dto.AccountDTO;
import com.example.azure_sql_demo.dto.CreateAccountRequest;
import com.example.azure_sql_demo.model.Account;
import org.mapstruct.*;

import java.util.List;

@Mapper(
    componentModel = "spring",
    nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE,
    unmappedTargetPolicy = ReportingPolicy.IGNORE
)
public interface AccountMapper {

    /**
     * Convert Account entity to AccountDTO
     */
    @Mapping(target = "ownerName", expression = "java(getOwnerName(account))")
    @Mapping(target = "userId", source = "user.id")
    AccountDTO toDTO(Account account);

    /**
     * Convert list of Account entities to list of AccountDTOs
     */
    List<AccountDTO> toDTOList(List<Account> accounts);

    /**
     * Convert CreateAccountRequest to Account entity
     */
    @Mapping(target = "id", ignore = true)
    @Mapping(target = "accountNumber", ignore = true) // Generated by service
    @Mapping(target = "balance", source = "initialDeposit")
    @Mapping(target = "user", ignore = true) // Set by service
    @Mapping(target = "fromTransactions", ignore = true)
    @Mapping(target = "toTransactions", ignore = true)
    @Mapping(target = "createdAt", ignore = true)
    @Mapping(target = "updatedAt", ignore = true)
    @Mapping(target = "createdBy", ignore = true)
    @Mapping(target = "lastModifiedBy", ignore = true)
    Account toEntity(CreateAccountRequest request);

    /**
     * Helper method to get owner name
     */
    default String getOwnerName(Account account) {
        if (account == null || account.getUser() == null) {
            return null;
        }
        
        String firstName = account.getUser().getFirstName();
        String lastName = account.getUser().getLastName();
        
        if (firstName != null && lastName != null) {
            return firstName + " " + lastName;
        } else if (firstName != null) {
            return firstName;
        } else if (lastName != null) {
            return lastName;
        } else {
            return account.getUser().getUsername();
        }
    }
}
