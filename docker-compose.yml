
services:
  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    command: redis-server --bind 0.0.0.0 --protected-mode no
    networks:
      - spring-redis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-server
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
    networks:
      - spring-redis-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: spring-app
    ports:
      - "8080:8080"
    environment:
      # PROPERTIES CORRETAS PARA SPRING BOOT 3.2.0
      - SPRING_DATA_REDIS_HOST=redis-server
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=azure_sql_demo;encrypt=false;trustServerCertificate=true;
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=YourStrong@Passw0rd
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      redis:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
    networks:
      - spring-redis-network

networks:
  spring-redis-network:
    external: true